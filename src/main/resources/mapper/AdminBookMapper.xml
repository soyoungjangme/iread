<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.iread.mapper.AdminBookMapper">

    <select id="getIsbn" resultType="string">
        select isbn
        from books
    </select>

    <insert id="registBook" parameterType="com.project.iread.dto.BookDTO">
        insert into books(
                        isbn,
                        title,
                        link,
                        image,
                        author,
                        discount,
                        publisher,
                        pubdate,
                        description,
                        genre_no)
        values(
            #{isbn},
            #{title},
            #{link},
            #{image},
            #{author},
            #{discount},
            #{publisher},
            #{pubdate},
            #{description},
            #{genreNo})

    </insert>
    
<!--  모든 도서 개수 호출  -->
    <select id="totalCount" resultType="long">
        select count(*)
        from books
        where book_activated = 'Y'
    </select>

<!--  모든 도서 목록 호출  -->
    <select id="getAllBook" resultMap="booksMap">
        select b.*, g.genre_name
        from books b
        left join genres g on g.genre_no = b.genre_no
        where b.book_activated = 'Y'
        limit #{pageSize} offset #{offset}
    </select>

    <resultMap id="booksMap" type="com.project.iread.dto.BookDTO">
        <id property="bookNo" column="book_no"/>
        <result property="isbn" column="isbn"/>
        <result property="title" column="title"/>
        <result property="link" column="link"/>
        <result property="image" column="image"/>
        <result property="author" column="author"/>
        <result property="discount" column="discount"/>
        <result property="publisher" column="publisher"/>
        <result property="pubdate" column="pubdate"/>
        <result property="description" column="description"/>
        <result property="bookLike" column="book_like"/>
        <result property="bookActivated" column="book_activated"/>
        <result property="genreNo" column="genre_no"/>
        <result property="genreName" column="genre_name"/>
    </resultMap>


<!--  검색 도서 개수 호출  -->
    <select id="searchTotalCount" parameterType="string" resultType="long">
        select count(*) from books b
        where (b.title like concat ('%', #{keyword}, '%')
        or b.author like concat ('%', #{keyword}, '%')
        or b.publisher like concat ('%', #{keyword}, '%'))
        and b.book_activated = 'Y'
    </select>

<!--  도서목록_검색호출  -->
    <select id="getSearchBook" parameterType="map" resultMap="booksMap">
        select b.*, g.genre_name from books b
        left join genres g on g.genre_no = b.genre_no
        where (b.title like concat ('%', #{keyword}, '%')
        or b.author like concat ('%', #{keyword}, '%')
        or b.publisher like concat ('%', #{keyword}, '%'))
        and b.book_activated = 'Y'
        limit #{pageSize} offset #{offset}
    </select>

<!--  도서목록_삭제  -->
    <delete id="deleteBook" parameterType="long">
        delete from books
        where book_no = #{bookNo}
    </delete>

<!--  장르등록  -->
    <insert id="registGenre" parameterType="list">
        insert into genres(genre_name)
        values
        <foreach item="item" collection="list" separator=",">
            (#{item.genreName})
        </foreach>
    </insert>

<!--  장르삭제  -->
    <delete id="deleteGenre" parameterType="list">
        delete from genres
        where genre_name in
            <foreach collection="list" item="item" open="(" separator="," close=")">
                #{item.genreName}
            </foreach>
    </delete>

<!--  장르호출  -->
    <select id="getGenre" resultType="com.project.iread.dto.GenreDTO">
        select *
        from genres
    </select>

<!--  삭제하려는 장르 중 등록된 도서가 있는지  -->
    <select id="countBooksByGenreName" parameterType="string" resultType="int">
        select count(*) from books
        where genre_no = (
            select genre_no from genres
            where genre_name = #{genreName}
        )
    </select>

</mapper>